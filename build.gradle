plugins {
    id 'idea'
    id 'scala'
    id "com.github.johnrengelman.shadow" version "2.0.4"
    id 'application'
}

group = "flink-example"
version = "1.0.0-SNAPSHOT"
mainClassName = 'StreamingFileSinkApp'

ext {
    flinkVersion = "1.8.3"
    slf4jVersion = "1.7.25"
    log4jVersion = "1.2.17"
    scalaBinVersion = "2.12"
    scalaVersion = "2.12.10"
    armVerison = "2.0"
    json4sVersion = "3.5.3"
    lazyJsonVersion = "2.3.1"
    scalaTestVersion = "3.0.5"
    scoptVersion = "3.7.0"
    loggingVersion = "3.5.0"
    configVersion = "1.4.0"
    guiceVersion = "4.1.0"
    metricsVersion = "4.0.3"
    jarDir = "distribution"
}

repositories {
    mavenCentral()
    maven {
        url 'http://repository.apache.org/snapshots'
    }
}

dependencies {
    compile "org.scala-lang:scala-library:$scalaVersion"
    testCompile "org.scalatest:scalatest_$scalaBinVersion:$scalaTestVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "com.github.scopt:scopt_$scalaBinVersion:$scoptVersion"
    compile "me.doubledutch:lazyjson:$lazyJsonVersion"
    compile "com.typesafe.scala-logging:scala-logging_$scalaBinVersion:$loggingVersion"
    compile "com.typesafe:config:$configVersion"
    compile "com.jsuereth:scala-arm_$scalaBinVersion:$armVerison"
    compile "org.json4s:json4s-native_$scalaBinVersion:$json4sVersion"
    compile "io.dropwizard.metrics:metrics-core:$metricsVersion"
    compile "org.apache.flink:flink-clients_$scalaBinVersion:$flinkVersion"
    compile "org.apache.flink:flink-scala_$scalaBinVersion:$flinkVersion"
    compile "org.apache.flink:flink-streaming-scala_$scalaBinVersion:$flinkVersion"
    compile "org.apache.flink:flink-connector-kafka_$scalaBinVersion:$flinkVersion"
    compile "org.apache.flink:flink-metrics-dropwizard:$flinkVersion"
    compile "org.apache.flink:flink-statebackend-rocksdb_$scalaBinVersion:$flinkVersion"
    compile "org.apache.flink:flink-connector-filesystem_$scalaBinVersion:$flinkVersion"
    compile "org.apache.flink:flink-shaded-hadoop2:2.4.1-$flinkVersion"
    compile "org.apache.flink:flink-parquet:$flinkVersion"
    compile group: 'org.apache.parquet', name: 'parquet-avro', version: '1.10.0'
    compile "com.google.protobuf:protobuf-java-util:3.6.1"
    compile "com.twitter:chill-protobuf:0.4.2"
    compile "com.github.pureconfig:pureconfig_$scalaBinVersion:0.12.2"
}

task testScala(dependsOn: ["testClasses"], type: JavaExec) {
    main = "org.scalatest.tools.Runner"
    args = ["-R", "build/classes/scala/test", "-o"]
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn testScala
wrapper {
    gradleVersion = '4.10'
}

shadowJar {
    mergeServiceFiles()
    exclude "org/apache/flink/shaded/**"
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    dependencies {
        // List of flink dependencies
        exclude(dependency("org.apache.flink:flink-shaded-curator-recipes"))
        exclude(dependency("org.apache.flink:flink-core"))
        exclude(dependency("org.apache.flink:flink-java"))
        exclude(dependency("org.apache.flink:flink-scala_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-runtime_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-optimizer_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-clients_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-examples-batch_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-examples-streaming_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-streaming-java_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-streaming-scala_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-metrics-core"))
        exclude(dependency("org.apache.flink:flink-queryable-state-client-java_$scalaBinVersion"))
        exclude(dependency("org.apache.flink:flink-hadoop-fs"))
        exclude(dependency("org.apache.flink:force-shading"))

        // Nested dependencies( include flink lib jar )
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency('org.scala-lang:scala-compiler'))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency('com.typesafe.akka::'))
        exclude(dependency("com.typesafe:config"))
        exclude(dependency("com.typesafe:ssl-config-core_$scalaBinVersion"))
        exclude(dependency("commons-lang:commons-lang"))
        exclude(dependency("commons-logging:commons-logging"))
        exclude(dependency("commons-io:commons-io"))
        exclude(dependency("commons-cli:commons-cli"))
        exclude(dependency("commons-codec:commons-codec"))
        exclude(dependency("org.apache.commons:commons-compress"))
        exclude(dependency("org.apache.commons:commons-math3"))
        exclude(dependency("org.clapper:grizzled-slf4j_$scalaBinVersion:"))
        exclude(dependency("org.javassist:javassist:"))
        exclude(dependency("org.apache.avro:avro"))
        exclude(dependency("org.codehaus.jackson:jackson-core-asl"))
        exclude(dependency("org.codehaus.jackson:jackson-mapper-asl"))
        exclude(dependency("com.thoughtworks.paranamer:paranamer"))
        exclude(dependency("org.xerial.snappy:snappy-java"))
        exclude(dependency("org.tukaani:xz"))
        exclude(dependency("org.slf4j:slf4j-api"))
        exclude(dependency("org.slf4j:slf4j-log4j12"))
        exclude(dependency("log4j:log4j"))
        exclude(dependency("com.esotericsoftware.kryo:kryo"))
        exclude(dependency("com.esotericsoftware.minlog:minlog"))
        exclude(dependency("org.objenesis:objenesis"))
        exclude(dependency("com.github.scopt::"))
        exclude(dependency("stax:stax-api"))
    }
}

artifacts
{
    archives file : project.file("build/libs/${rootProject.name}-${version}-all.jar"), name : 'flink-kafka-to-streaming-sink', type : 'jar'
}

wrapper {
    gradleVersion = '4.10'
}